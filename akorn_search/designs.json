[{"_id": "_design/authors", "language": "javascript", "views": {"authors": {"map": "function(doc) {\n  for(i in doc.author_names) { emit(doc.author_names[i], null); } \n}"}}}, {"_id": "_design/errors", "language": "javascript", "views": {"nonascii": {"map": "function(doc) {\n  function containsAllAscii(str) {\n    return  /^[\\000-\\177]*$/.test(str) ;\n  }\n  \n  if(!containsAllAscii(doc.title))\n  {\n    emit(null, null);\n  }\n  else if(!containsAllAscii(doc.abstract))\n  {\n    emit(null, null);\n  }\n  else\n  {\n    for(i in doc.author_names) {\n      if(!containsAllAscii(doc.author_names[i])) {\n        emit(null, null);\n        break;\n       }\n    }\n  }\n}"}}}, {"scraper_module": "lib.scrapers.journals.scrape_pr", "views": {"sources": {"map": "function(doc) {\n  if('source_url' in doc) {\n    emit(doc.source_url, null);\n  }\n  if('source_urls' in doc) {\n    for(i in doc.source_urls) {\n      emit(doc.source_urls[i], null)\n    }\n  }\n  if('ids' in doc && 'url' in doc.ids) {\n    emit(doc.ids.url, null);\n  }\n}"}, "ids": {"map": "function(doc) {\n  for(var i in doc.ids) { emit(i + ':' + doc.ids[i], null); } \n}"}}, "language": "javascript", "_id": "_design/index"}, {"scraper_module": "lib.scrapers.journals.scrape_pr", "views": {"rescrape": {"map": "function(doc) {\n  if(doc.rescrape) { emit(null, null); } \n}"}, "scraper": {"map": "function(doc) {\n  if(doc.scraper_module) { emit(doc.scraper_module, null); } \n}"}}, "language": "javascript", "_id": "_design/rescrape"}]
